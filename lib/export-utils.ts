import html2pdf from "html2pdf.js"

interface ExportOptions {
  includeHeader: boolean
  includeFooter: boolean
  includeTimestamp: boolean
}

const downloadFile = (blob: Blob, filename: string) => {
  const url = URL.createObjectURL(blob)
  const a = document.createElement("a")
  a.href = url
  a.download = filename
  document.body.appendChild(a)
  a.click()
  document.body.removeChild(a)
  URL.revokeObjectURL(url)
}

export const exportDocument = async (
  format: string,
  content: string,
  title: string,
  options: ExportOptions
) => {
  let exportContent = content

  // Add header if selected
  if (options.includeHeader) {
    exportContent = `${title}\n${"=".repeat(title.length)}\n\n${exportContent}`
  }

  // Add footer if selected
  if (options.includeFooter) {
    const footer = `\n\n${"_".repeat(50)}\nGenerated by LegalDoc AI`
    if (options.includeTimestamp) {
      exportContent += `${footer}\nGenerated on: ${new Date().toLocaleString()}`
    } else {
      exportContent += footer
    }
  }

  const htmlContent = `
        <!DOCTYPE html>
        <html>
        <head>
          <title>${title}</title>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; margin: 40px; }
            h1 { border-bottom: 2px solid #333; }
            .footer { margin-top: 40px; font-size: 12px; color: #666; }
            pre { white-space: pre-wrap; word-wrap: break-word; }
          </style>
        </head>
        <body>
          <h1>${title}</h1>
          <pre>${exportContent}</pre>
          ${
            options.includeFooter
              ? `<div class="footer">Generated by LegalDoc AI${
                  options.includeTimestamp ? ` on ${new Date().toLocaleString()}` : ""
                }</div>`
              : ""
          }
        </body>
        </html>
      `

  if (format === "pdf") {
    const element = document.createElement("div")
    element.innerHTML = htmlContent
    html2pdf().from(element).set({ filename: `${title}.pdf` }).save()
  } else if (format === "docx") {
    const response = await fetch('/api/convert-to-docx', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ htmlContent, title }),
    });

    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.error || 'Failed to convert to DOCX');
    }

    const docxBlob = await response.blob();
    downloadFile(docxBlob, `${title}.docx`);
  } else if (format === "txt") {
    const blob = new Blob([exportContent], { type: "text/plain" })
    downloadFile(blob, `${title}.txt`)
  } else if (format === "html") {
    const blob = new Blob([htmlContent], { type: "text/html" })
    downloadFile(blob, `${title}.html`)
  }
}
